[[api]]
== API Reference

You can access agent API after initializing the agent: 

[source,js]
----
var apm = require('elastic-apm-js-base').init(...)
----


[float]
[[apm-set-user-context]]
=== `apm.setUserContext()`

[source,js]
----
apm.setUserContext(context)
----

Call this method to enrich collected performance data and errors with information about the user.

The given `context` argument must be an object and can contain the following properties (all optional):

* `id` - The users ID
* `username` - The users username
* `email` - The users e-mail


The provided user context is stored under `context.user` in Elasticsearch on both errors and transactions.


[float]
[[apm-set-custom-context]]
=== `apm.setCustomContext()`

[source,js]
----
apm.setCustomContext(context)
----

Call this to enrich collected errors and transactions with any information that you think will help you debug performance issues or errors.

The provided custom context is stored under `context.custom` in Elasticsearch on both errors and transactions.

The given `context` argument must be an object and can contain any property that can be JSON encoded.


[float]
[[apm-set-tags]]
=== `apm.setTags()`

[source,js]
----
apm.setTags(tags)
----

Set tags on transactions and errors.

Tags are key/value pairs that are indexed by Elasticsearch and therefore searchable (as opposed to data set via `setCustomContext()`). You can set multiple tags.

Arguments:

* `tags` - Any key/value object with the following specifications:
** key - Any string. Must not contain periods (`.`) as those have special meaning in Elasticsearch
** value - Any string. If a non-string data type is given, it's converted to a string before being sent to the APM Server.